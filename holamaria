//HEADER ********************************

#ifndef POLIGONO_H
#define POLIGONO_H
#define pi 3,1416


class poligono{
public:
    poligono();
    virtual const double area()=0;
};

class circulo:public poligono{
public:
    circulo();
    float radio,angulo;
    double area(float radio);


};
class triangulo:public poligono{
public:
    triangulo();
    float cateto1,cateto2,hipotenusa;
    double area(float cateto1,float cateto2,float hipotenusa);
    void tipo(float cateto1,float cateto2,float hipotenusa);

};
class cuadrado:public poligono{
public:
    cuadrado();
    float ladox,ladoy;
    double area(float ladox,float ladoy);

};
class estrellita:public poligono{
public:
    estrellita();
    int n_lados,n_vertices;
    double area(int n_lados,int n_vertices);
    void tipo(int n_lados,int n_vertices);
};



#endif // POLIGONO_H



#endif // POLIGONO_H
//cpp 
#include "poligono.h"
#include <iostream>
#include <math.h>

using namespace std;

//circulo

double circulo::area(float radio){
    return pi*pow(radio,2);
}

//cuadrilatero
double cuadrado::area(float ladox,float ladoy){
    return ladox*ladoy;
}

//triangulo
double triangulo::area(float c1,float c2,float hi){
    double aux=
            (1/4)*sqrt((c1+c2-hi)*
                       (c1-c2+hi)*
                       (-c1+c2+hi)*
                       (c1+c2+hi));
    return aux;
}

//estrellita
double estrellita::area(int nl,int nv){
    cout<<"nose :c "<<endl;
    /*double ar;
    for(int i=1;i<=nl;i++){
        ar+=i*
    }*/
}
//tipo triangulo
void triangulo::tipo(float c1,float c2,float hi){
    if(c1==c2==hi)
        cout<<"triangulo equilatero"<<endl;
    else if((c1==c2)!=hi)
        cout<<"triangulo isoceles"<<endl;
    else if(c1!=c2!=hi)
        cout<<"triangulo escaleno"<<endl;
    else if(sqrt(pow(c1,2)+pow(c2,2))==hi)
        cout<<"triangulo rectangulo"<<endl;
}

//tipo estrellita
void estrellita::tipo(int nl,int nv){

    if(nl==1)
        cout<<"punto"<<endl;
    else if(nl==2)
        cout<<"recta"<<endl;
    else if(nl==3)
        cout<<"triangulo"<<endl;
    else if(nl==4)
        cout<<"cuadrilatero"<<endl;
    else if(nl==5)
        cout<<"pentagono"<<endl;
    else if(nl==6)
        cout<<"hexagono"<<endl;
    else if(nl>=7)
        cout<<"figura de muchos lados"<<endl;
}
Probando :3
















